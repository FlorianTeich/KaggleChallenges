version: "3.9"

services:

  kcu:
    build: .
    restart: 'no'
    environment:
      SQL_PASSWORD: postgres
      SQL_USER: postgres
      SQL_DB: postgres
      SQL_HOST: db
      SQL_PORT: "5432"
    depends_on:
      - postgres
    command: jupyter lab --ip=0.0.0.0 --no-browser --notebook-dir=/srv/KaggleChallenge
    ports:
      - "8889:8888"
    volumes:
      - ./src/notebooks:/srv/KaggleChallenge/extra_data_new
      - myapp:/srv/KaggleChallenge/extra_data

  mlflow:
    image: ghcr.io/mlflow/mlflow
    restart: 'no'
    command: /bin/sh -c "pip3 install minio && echo test && python3 /srv/create_bucket.py && mlflow server --host 0.0.0.0"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: GArH6uh55RJ44MBc
      AWS_SECRET_ACCESS_KEY: wZki2TznKq0w39wprAqm7KvKCBPeH5nm
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow_vol:/srv

  db:
    image: "postgres:14.5"
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: masoud
      MINIO_ROOT_PASSWORD: Strong#Pass#2022
      MINIO_ACCESS_KEY: GArH6uh55RJ44MBc
      MINIO_SECRET_KEY: wZki2TznKq0w39wprAqm7KvKCBPeH5nm
    command: server --console-address ":9001" /data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env

volumes:
  minio_storage: {}
  myapp:
